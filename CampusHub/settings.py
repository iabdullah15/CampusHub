"""
Django settings for CampusHub project.

Generated by 'django-admin startproject' using Django 5.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
from django.urls import reverse_lazy
import os


load_dotenv()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-uk)5tp#&2!81lq1)o_rq5w6q2!evqzrcj*vdj-#@k4)opxg-r0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


AUTH_USER_MODEL = 'user.CustomUser'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'user',
    'forum',
    'django_email_verification',
    'crispy_forms',
    "crispy_bootstrap5",
    'widget_tweaks',
]

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"

CRISPY_TEMPLATE_PACK = "bootstrap5"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'CampusHub.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'CampusHub.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "campushub",
        "USER": "DjangoAdmin",
        "PASSWORD": "jov1lHTW4KefK2q",
        "HOST": "localhost",
        "PORT": "3306",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_DIRS = [
    BASE_DIR / "user" / "static",
    BASE_DIR / "forum" / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


mail = os.environ.get('MAIL')
password = os.environ.get('PASSWORD')


def email_verified_callback(user):
    user.is_active = True


def password_change_callback(user, password):
    user.set_password(password)


# Global Package Settings
EMAIL_FROM_ADDRESS = 'abduzubair2001@gmail.com'  # mandatory
# mandatory (unless you use a custom link)
EMAIL_PAGE_DOMAIN = 'http://127.0.0.1:8000'
EMAIL_MULTI_USER = False  # optional (defaults to False)

# Email Verification Settings (mandatory for email sending)
EMAIL_MAIL_SUBJECT = 'Confirm your email {{ user.username }}'
EMAIL_MAIL_HTML = 'email/mail_body.html'
EMAIL_MAIL_PLAIN = 'email/mail_body.txt'
EMAIL_MAIL_TOKEN_LIFE = 60 * 60  # one hour

# Email Verification Settings (mandatory for builtin view)
EMAIL_MAIL_PAGE_TEMPLATE = 'email_success_template.html'
EMAIL_MAIL_CALLBACK = email_verified_callback

# Password recovery settings
# Called after password recovery
EMAIL_PASSWORD_CALLBACK = password_change_callback
EMAIL_PASSWORD_SUBJECT = 'Reset your password for {{ user.username }}'
EMAIL_PASSWORD_HTML = 'password/password_reset_email.html'
EMAIL_PASSWORD_PLAIN = 'password/password_reset_email.txt'
EMAIL_PASSWORD_TOKEN_LIFE = 60 * 10  # Token expires in 10 minutes
EMAIL_PASSWORD_PAGE_TEMPLATE = 'password/password_reset_done.html'
EMAIL_PASSWORD_CHANGE_PAGE_TEMPLATE = 'password/password_reset_form.html'


# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'abduzubair2001@gmail.com'
EMAIL_HOST_PASSWORD = "paea uypn hpyi honl"




# GCP storage settings


from google.oauth2 import service_account


# Load credentials from the service account JSON file
GS_CREDENTIALS = service_account.Credentials.from_service_account_file(
    os.path.join(BASE_DIR, 'gcpCredentials.json')
)


# Configure Django storage settings
STORAGES = {
    "default": {
        "BACKEND": "storages.backends.gcloud.GoogleCloudStorage",
        "OPTIONS": {
            "project_id": "campushub-fyp",
            "credentials": GS_CREDENTIALS,
            "bucket_name": "campushub_bucket",
        },
    },
    "staticfiles": {
        "BACKEND": "storages.backends.gcloud.GoogleCloudStorage",
        "OPTIONS": {
            "project_id": "campushub-fyp",
            "credentials": GS_CREDENTIALS,
            "bucket_name": "campushub_bucket",
        },
    },
}


# Google Cloud Storage settings
GS_PROJECT_ID = 'campushub-fyp'
GS_BUCKET_NAME = 'campushub_bucket'

# Static and media files settings
STATIC_URL = f'https://storage.googleapis.com/{GS_BUCKET_NAME}/static/'

MEDIA_URL = f'https://storage.googleapis.com/{GS_BUCKET_NAME}/media/'

# Add unique file names if the same file name is uploaded again
GS_FILE_OVERWRITE = False
